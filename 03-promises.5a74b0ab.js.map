{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,KAAOC,SAASC,cAAc,QAC9BC,QAAQC,IAAIJ,MACZA,KAAKK,iBAAiB,UAmBtB,SAAsBC,GACpBA,EAAMC,iBAENC,EAAQF,EAAMG,cAAcC,SAASC,MAAMC,MAE3CC,EAAOP,EAAMG,cAAcC,SAASI,KAAKF,MAEzCG,EAAST,EAAMG,cAAcC,SAASM,OAAOJ,MAE7C,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAAG,CACnC,IAAMC,EAAWD,EACjBT,EAAQW,OAAOX,GAASW,OAAON,GAC/BO,EAAcF,EAAUV,GACrBa,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALX,MACjBc,EAAA3B,GAAS4B,OAAOC,QAAQ,sBAAqCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEpEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUO,EAAKR,EAALX,MAClBc,EAAA3B,GAAS4B,OAAOK,QAAQ,qBAAoCH,OAAfL,EAAS,QAAYK,OAANE,EAAM,M,QAlC1E,IAAItB,EAAQ,EACRK,EAAO,EACPE,EAAS,EAEb,SAASK,EAAcG,EAAUS,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEX,WAAUZ,MAAAqB,IAEpBG,EAAO,CAAEZ,WAAUZ,MAAAqB,G,GACjBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nform = document.querySelector('form');\nconsole.log(form);\nform.addEventListener('submit', onFormSubmit);\n\nlet delay = 0;\nlet step = 0;\nlet amount = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {   \n    const shouldResolve = Math.random() > 0.3;\n    // console.log(`${position}, ${delay}`);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });        \n      }}, delay);\n  })\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();  \n  // console.log(event.currentTarget.elements);\n  delay = event.currentTarget.elements.delay.value;\n  // console.log(delay);\n  step = event.currentTarget.elements.step.value;\n  // console.log(step);\n  amount = event.currentTarget.elements.amount.value;\n  // console.log(amount);\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;    \n    delay = Number(delay) + Number(step);     \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n};"],"names":["$6JpON","parcelRequire","form","document","querySelector","console","log","addEventListener","event","preventDefault","$ce04d3a99e08e73b$var$delay","currentTarget","elements","delay","value","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$amount","amount","i","position1","Number","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.5a74b0ab.js.map"}